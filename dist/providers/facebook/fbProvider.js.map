{"version":3,"sources":["../../../js/providers/facebook/fbProvider.js"],"names":["app","constants","basePath","messageAttachments","senderID","sendTextMessage","messageId","appId","metadata","console","log","message","sender","type","speech","replies","b","length","reply","push","sendQuickReply","title","sendImageMessage","imageUrl","messageData","recipient","id","payload","facebook","callSendAPI","messages","elements","map","buttons","m","isLink","postback","substring","button","text","element","subtitle","self","sendGenericMessage"],"mappings":"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","file":"fbProvider.js","sourcesContent":["import request from 'request'\nimport crypto from 'crypto'\n\n\n\n\n\n\nexport default class {\n    constructor(app, constants, basePath = ''){\n        this.app = app;\n        this.constants = constants;\n        this.basePath = `http://${basePath}`;\n\n    }\n    handleMessageAttachments(messageAttachments, senderID){\n        this.sendTextMessage(senderID, \"Attachment received. Thank you.\");\n    }\n    handleEcho(messageId,appId, metadata){\n        console.log(`Received echo for message ${messageId} and app ${appId} with metadata ${metadata}`);\n    }\n    handleMessage(message, sender){\n\n        switch (message.type) {\n            case 0: //text\n                this.sendTextMessage(sender, message.speech);\n            break;\n            \n            case 2: //quick replies\n                let replies = [];\n                for (var b = 0; b < message.replies.length; b++) {\n                    let reply =\n                    {\n                        \"content_type\": \"text\",\n                        \"title\": message.replies[b],\n                        \"payload\": message.replies[b]\n                    }\n                    replies.push(reply);\n                }\n                this.sendQuickReply(sender, message.title, replies);\n            break;\n            \n            case 3: //image\n                this.sendImageMessage(sender, message.imageUrl);\n            \n            break;\n            \n            case 4:\n                // custom payload\n                var messageData = {\n                    recipient: {\n                        id: sender\n                    },\n                    message: message.payload.facebook\n\n                };\n\n                this.callSendAPI(messageData);\n\n            break;\n        }\n    }\n\n    handleCardMessages(messages, sender){\n        let elements = [];\n        \n        if(messages){\n            messages.map( m => {\n                let buttons = [];\n                \n                m.buttons.map( b => {\n                    let isLink = (b.postback.substring(0, 4) === 'http');\n                    let button;\n                    if (isLink) {\n                        button = {\n                            \"type\": \"web_url\",\n                            \"title\": message.buttons[b].text,\n                            \"url\": message.buttons[b].postback\n                        }\n                    } else {\n                        button = {\n                            \"type\": \"postback\",\n                            \"title\": message.buttons[b].text,\n                            \"payload\": message.buttons[b].postback\n                        }\n                    }\n                    buttons.push(button);\n                });\n            });\n        }\n\n        for (var m = 0; m < messages.length; m++) {\n            let message = messages[m];\n            let buttons = [];\n            \n            for (var b = 0; b < message.buttons.length; b++) {\n                let isLink = (message.buttons[b].postback.substring(0, 4) === 'http');\n                let button;\n                if (isLink) {\n                    button = {\n                        \"type\": \"web_url\",\n                        \"title\": message.buttons[b].text,\n                        \"url\": message.buttons[b].postback\n                    }\n                } else {\n                    button = {\n                        \"type\": \"postback\",\n                        \"title\": message.buttons[b].text,\n                        \"payload\": message.buttons[b].postback\n                    }\n                }\n                buttons.push(button);\n            }\n\n\n            let element = {\n                \"title\": message.title,\n                    \"image_url\":message.imageUrl,\n                    \"subtitle\": message.subtitle,\n                    \"buttons\": buttons\n                };\n                elements.push(element);\n            }\n            console.log('card message');\n            console.log(elements);\n            self.sendGenericMessage(sender, elements);\n    }\n}"]}